{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Set of gulp tasks.\n * author: geut\n */\n\n/**\n * devDependencies\n */\nimport defaultGulp from 'gulp';\nimport defaultConfig from '../default-config.json';\nimport path from 'path';\nimport util from 'util';\n\n/**\n * tasks import\n */\nimport cleanTask from './tasks/clean.js';\nimport browserifyTask from './tasks/browserify.js';\nimport postcssTask from './tasks/postcss.js';\nimport browserSyncTask from './tasks/browser-sync.js';\nimport watchFilesTask from './tasks/watch-files.js';\nimport buildTask from './tasks/build.js';\nimport serveTask from './tasks/serve.js';\n\nconst appfy = {\n    tasks: {},\n    init(basePath, userConfig, userGulp) {\n        this.gulp = userGulp || defaultGulp;\n        this.userConfig = userConfig;\n        this.defaultConfig = defaultConfig;\n        this.config = defaultConfig;\n        if ( userConfig ) {\n            this.config = util._extend(defaultConfig, userConfig);\n        }\n        /**\n         * Autosettings\n         */\n        this.config.basePath = basePath;\n        this.config.sourcePath = path.join( this.config.basePath, this.config.sourcePath );\n        this.config.destPath = path.join( this.config.basePath, this.config.destPath );\n\n        if (process.env && (process.env.NODE_ENV === 'production')) {\n            this.config.isProduction = true;\n        } else {\n            this.config.isProduction = false;\n        }\n\n        /**\n         * Autotasks\n         */\n        this.tasks.clean = cleanTask.bind(this);\n        this.tasks.browserify = browserifyTask.bind(this);\n        this.tasks.postcss = postcssTask.bind(this);\n        this.tasks.browserSync = browserSyncTask.bind(this);\n        this.tasks.watchFiles = watchFilesTask.bind(this);\n        this.tasks.build = buildTask.bind(this);\n        this.tasks.serve = serveTask.bind(this);\n        return this;\n    },\n    defineTasks() {\n        const config = this.config;\n        const runSequence = require('run-sequence').use(this.gulp);\n\n        /**\n         * Gulp task definitions\n         */\n        this.gulp.task( 'clean', this.tasks.clean() );\n        this.gulp.task( 'browserify', this.tasks.browserify() );\n        this.gulp.task( 'postcss', this.tasks.postcss() );\n        this.gulp.task( 'browser-sync', this.tasks.browserSync() );\n        this.gulp.task( 'watch-files', this.tasks.watchFiles() );\n\n        this.gulp.task( 'build', this.tasks.build() );\n        this.gulp.task( 'serve', this.tasks.serve() );\n\n        this.gulp.task( 'default', function defaultTask( cb ) {\n            config.watchify = true;\n            runSequence( 'clean', 'build', 'serve', cb );\n        } );\n    }\n};\n\nexport default appfy;\n"]}